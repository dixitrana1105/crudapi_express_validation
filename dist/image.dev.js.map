{"version":3,"sources":["image.js"],"names":["multer","require","path","storage","diskStorage","destination","req","file","cb","filename","Date","now","originalname","upload","fileFilter","mimetype","Error","size","router","post","single","res","status","send","module","exports"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,IAAME,OAAO,GAAGH,MAAM,CAACI,WAAP,CAAmB;AACjCC,EAAAA,WAAW,EAAE,qBAAUC,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACpCA,IAAAA,EAAE,CAAC,IAAD,EAAO,UAAP,CAAF;AACD,GAHgC;AAIjCC,EAAAA,QAAQ,EAAE,kBAAUH,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACjCA,IAAAA,EAAE,CAAC,IAAD,EAAOE,IAAI,CAACC,GAAL,KAAa,GAAb,GAAmBJ,IAAI,CAACK,YAA/B,CAAF;AACD;AANgC,CAAnB,CAAhB,C,CASA;;AACA,IAAMC,MAAM,GAAGb,MAAM,CAAC;AACpBG,EAAAA,OAAO,EAAEA,OADW;AAEpBW,EAAAA,UAAU,EAAE,oBAAUR,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACnC,QAAID,IAAI,CAACQ,QAAL,KAAkB,YAAlB,IAAkCR,IAAI,CAACQ,QAAL,KAAkB,WAAxD,EAAqE;AACnE,aAAOP,EAAE,CAAC,IAAIQ,KAAJ,CAAU,oBAAV,CAAD,CAAT;AACD;;AACD,QAAIT,IAAI,CAACU,IAAL,GAAY,OAAhB,EAAyB;AACvB,aAAOT,EAAE,CAAC,IAAIQ,KAAJ,CAAU,yBAAV,CAAD,CAAT;AACD;;AACDR,IAAAA,EAAE,CAAC,IAAD,EAAO,IAAP,CAAF;AACD;AAVmB,CAAD,CAArB;AAcAU,MAAM,CAACC,IAAP,CAAY,SAAZ,EAAuBN,MAAM,CAACO,MAAP,CAAc,OAAd,CAAvB,EAA+C,UAACd,GAAD,EAAMe,GAAN,EAAc;AACzD,MAAI,CAACf,GAAG,CAACC,IAAT,EAAe;AACbc,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,mBAArB;AACD,GAFD,MAEO;AACLF,IAAAA,GAAG,CAACE,IAAJ,uCAAwCjB,GAAG,CAACC,IAAJ,CAASE,QAAjD;AACD;AACF,CANH;AAQEe,MAAM,CAACC,OAAP,GAAiBP,MAAjB;AAEFM,MAAM,CAACC,OAAP,GAAiBZ,MAAjB","sourcesContent":["const multer = require('multer');\r\nconst path = require('path');\r\n\r\n// Set up multer storage\r\nconst storage = multer.diskStorage({\r\n  destination: function (req, file, cb) {\r\n    cb(null, 'uploads/');\r\n  },\r\n  filename: function (req, file, cb) {\r\n    cb(null, Date.now() + '-' + file.originalname);\r\n  }\r\n});\r\n\r\n// Set up multer upload object\r\nconst upload = multer({\r\n  storage: storage,\r\n  fileFilter: function (req, file, cb) {\r\n    if (file.mimetype !== 'image/jpeg' && file.mimetype !== 'image/png') {\r\n      return cb(new Error('Invalid file type.'));\r\n    }\r\n    if (file.size > 5000000) {\r\n      return cb(new Error('File size is too large.'));\r\n    }\r\n    cb(null, true);\r\n  }\r\n});\r\n\r\n\r\nrouter.post('/upload', upload.single('image'), (req, res) => {\r\n    if (!req.file) {\r\n      res.status(400).send('No file uploaded.');\r\n    } else {\r\n      res.send(`File uploaded successfully: ${req.file.filename}`);\r\n    }\r\n  });\r\n  \r\n  module.exports = router;\r\n  \r\nmodule.exports = upload;\r\n"],"file":"image.dev.js"}